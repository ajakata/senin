daemon off;

error_log /dev/stderr warn;
pid /var/run/nginx.pid;

worker_processes  auto;
events {
   worker_connections  4096;
}

http {
	sendfile on;
	include    /etc/nginx/mime.types;
	include    /etc/nginx/fastcgi.conf;
	default_type application/octet-stream;
	tcp_nopush   on;
	client_body_temp_path /tmp/nginx/body 1 2;
	fastcgi_temp_path /tmp/nginx/fastcgi_temp 1 2;
	fastcgi_cache_path /tmp/cache_rocketstack levels=1:2 keys_zone=rocketstack:100m inactive=10m;

	#a new log format for detecting bad bots.
	log_format blocked '$time_local: Blocked request from $http_x_real_ip $request';


	## This log format makes it so we can see real requester's IP address \
	##    not just the reverse proxy server's IP address. Also note, that \
	##    "specialLog" can be replaced with any name you would like to \
	##    give to this log format.
	log_format specialLog '$http_x_real_ip - $remote_user [$time_local]  '
									'"$request" $status $body_bytes_sent '
									'"$http_referer" "$http_user_agent"';

	client_max_body_size 512M;

	server {

		#listen       [::]:80; #uncomment for IPv6 support
		listen       80;

		listen [::]:443 ssl http2;
		listen 443 ssl http2;

		ssl_certificate         /etc/ssl/certs/cloudflare.pem;
		ssl_certificate_key     /etc/ssl/certs/cloudflare.key;

		root /www/public;
		index  index.php;
		access_log /dev/stdout;# specialLog;
		error_log /dev/stderr;
		log_not_found off;

		disable_symlinks off;

		include /etc/nginx/rocketstack.conf;
		# include /etc/nginx/seo_rewrites.conf;

		#Yoast SEO Sitemaps
		location ~ ([^/]*)sitemap(.*).x(m|s)l$ {
			## this redirects sitemap.xml to /sitemap_index.xml
			rewrite ^/sitemap.xml$ /sitemap_index.xml permanent;
			## this makes the XML sitemaps work
			rewrite ^/([a-z]+)?-?sitemap.xsl$ /index.php?xsl=$1 last;
			rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
			rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
			## The following lines are optional for the premium extensions
			## News SEO
			rewrite ^/news-sitemap.xml$ /index.php?sitemap=wpseo_news last;
			## Local SEO
			rewrite ^/locations.kml$ /index.php?sitemap=wpseo_local_kml last;
			rewrite ^/geo-sitemap.xml$ /index.php?sitemap=wpseo_local last;
			## Video SEO
			rewrite ^/video-sitemap.xsl$ /index.php?xsl=video last;
		}

		location / {
			try_files $uri $uri/ /index.php?$args;
		}

		# pass the PHP scripts to FastCGI server socket
		location ~ [^/]\.php(/|$) {
			fastcgi_split_path_info ^(.+?\.php)(/.*)$;
			if (!-f $document_root$fastcgi_script_name) {
				return 404;
			}
			fastcgi_pass unix:/run/php.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include fastcgi_params;
			# Skip cache based on rules in snippets/fastcgi-cache.conf.
			fastcgi_cache_bypass $skip_cache;
			fastcgi_no_cache $skip_cache;

			# Define memory zone for caching. Should match key_zone in fastcgi_cache_path above.
			fastcgi_cache rocketstack;

			fastcgi_buffers 16 32k;
			fastcgi_buffer_size 64k;
			fastcgi_busy_buffers_size 64k;

			# Define caching time.
			fastcgi_cache_valid 10m;
			#increase timeouts
			fastcgi_read_timeout 6000;
			fastcgi_connect_timeout 6000;
			fastcgi_send_timeout 6000;
			proxy_read_timeout 6000;
			proxy_connect_timeout 6000;
			proxy_send_timeout 6000;
			send_timeout 6000;

			#these lines should be the ones to allow Cloudflare Flexible SSL to be used so the server does not need to decrypt SSL
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Server $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-NginX-Proxy true;
		}

		gzip on;
		gzip_disable "msie6";

		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_buffers 16 8k;
		gzip_http_version 1.1;
		gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	}
}